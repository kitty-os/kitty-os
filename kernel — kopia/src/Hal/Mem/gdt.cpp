//
// Created by Piotr on 27.07.2024.
//

#include "gdt.hpp"

GDTSegmentDescriptor gdt_segments[] = {
        // Null entry
        GDT_ENTRY(0, 0),

        // DPL0 code
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_EXECUTABLE | GDT_ACCESS_DPL(0), GDT_FLAGS_LONG | GDT_FLAG_GRANULARITY),

        // DPL0 data
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_DPL(0), GDT_FLAG_GRANULARITY | GDT_FLAG_SIZE),

        // DPL1 code
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_EXECUTABLE | GDT_ACCESS_DPL(1), GDT_FLAGS_LONG | GDT_FLAG_GRANULARITY),

        // DPL1 data
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_DPL(1), GDT_FLAG_GRANULARITY | GDT_FLAG_SIZE),

        // DPL2 code
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_EXECUTABLE | GDT_ACCESS_DPL(2), GDT_FLAGS_LONG | GDT_FLAG_GRANULARITY),

        // DPL2 data
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_DPL(2), GDT_FLAG_GRANULARITY | GDT_FLAG_SIZE),

        // DPL3 code
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_EXECUTABLE | GDT_ACCESS_DPL(3), GDT_FLAGS_LONG | GDT_FLAG_GRANULARITY),

        // DPL3 data
        GDT_ENTRY(GDT_ACCESS_PRESENT | GDT_ACCESS_REGULAR_SEGMENT | GDT_ACCESS_RW | GDT_ACCESS_DPL(3), GDT_FLAG_GRANULARITY | GDT_FLAG_SIZE),
};

extern "C" void HalLoadGlobalDescriptorTableImpl(GDTRegister* gdt_register);

void HalLoadGlobalDescriptorTable()
{
    GDTRegister gdt_register = {
            .limit = sizeof(gdt_segments) - 1,
            .address = (uint64_t)&gdt_segments
    };

    HalLoadGlobalDescriptorTableImpl(&gdt_register);
}